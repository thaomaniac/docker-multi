name: multi

services:
  nginx:
    hostname: nginx
    image: nginx:${NGINX_IMAGE_VERSION}
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./config/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./config/nginx/conf.d:/etc/nginx/conf.d:ro
      - ./config/nginx/m2conf:/etc/nginx/m2conf:ro
      - ./config/nginx/ssl:/etc/ssl:ro
      - ./www:/var/www:cached
      - ./var/log/nginx:/var/log/nginx

  php73:
    hostname: php73
    build:
      context: ./build/php
      dockerfile: php73.Dockerfile
    ports:
      - "9000"
    volumes:
      - ./config/php/php73/custom.ini:/usr/local/etc/php/conf.d/php-custom.ini:ro
      - ./www:/var/www:cached
    working_dir: /var/www
    user: 'www-data'

  php74:
    hostname: php74
    build:
      context: ./build/php
      dockerfile: php74.Dockerfile
    ports:
      - "9000"
    volumes:
      - ./config/php/php74/custom.ini:/usr/local/etc/php/conf.d/php-custom.ini:ro
      - ./www:/var/www:cached
    working_dir: /var/www
    user: 'www-data'

  php81:
    hostname: php81
    build:
      context: ./build/php
      dockerfile: php81.Dockerfile
    ports:
      - "9000"
    volumes:
      - ./config/php/php81/custom.ini:/usr/local/etc/php/conf.d/php-custom.ini:ro
      - ./www:/var/www:cached
    working_dir: /var/www
    user: 'www-data'

  php82:
    hostname: php82
    build:
      context: ./build/php
      dockerfile: php82.Dockerfile
    ports:
      - "9000"
    volumes:
      - ./config/php/php82/custom.ini:/usr/local/etc/php/conf.d/php-custom.ini:ro
      - ./www:/var/www:cached
    working_dir: /var/www
    user: 'www-data'

  mysql:
    hostname: mysql
    image: mysql:${MYSQL_IMAGE_VERSION}
    #    command: --default-authentication-plugin=mysql_native_password
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - ./config/mysql/custom.cnf:/etc/mysql/conf.d/custom.cnf:ro
      - ./var/lib/mysql:/var/lib/mysql:cached

  mariadb:
    hostname: mariadb
    image: mariadb:${MARIADB_IMAGE_VERSION}
    #    command: --default-authentication-plugin=mysql_native_password
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - ./config/mariadb/custom.cnf:/etc/mariadb/conf.d/custom.cnf:ro
      - ./var/lib/mariadb:/var/lib/mysql:cached

  phpmyadmin:
    hostname: phpmyadmin
    image: phpmyadmin:${PHPMYADMIN_IMAGE_VERSION}
    ports:
      - "8080:80"
    environment:
      PMA_HOSTS: mysql,mariadb
      PMA_PMADB: phpmyadmin
    volumes:
      - ./config/phpmyadmin/conf.d:/etc/phpmyadmin/conf.d

  elasticsearch:
    hostname: elasticsearch
    image: elasticsearch:${ELASTICSEARCH_IMAGE_VERSION}
    ports:
      - "9200:9200"
    environment:
      - discovery.type=single-node
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    ulimits:
      memlock:
        soft: -1
        hard: -1
    deploy:
      resources:
        limits:
          memory: 2g
          cpus: '0.5'
        reservations:
          memory: 200m
          cpus: '0.25'

  opensearch:
    hostname: opensearch
    image: opensearchproject/opensearch:${OPENSEARCH_IMAGE_VERSION}
    environment:
      - discovery.type=single-node
      - "OPENSEARCH_JAVA_OPTS=-Xms1024m -Xmx1024m"
      - "DISABLE_INSTALL_DEMO_CONFIG=true"
      - "DISABLE_SECURITY_PLUGIN=true"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    deploy:
      resources:
        limits:
          memory: 2g
          cpus: '0.5'
        reservations:
          memory: 200m
          cpus: '0.25'
    volumes:
      - opensearch-data:/usr/share/opensearch/data
    ports:
      - "9201:9200"
      - "9600:9600"

  opensearch-dashboards:
    hostname: opensearch-dashboards
    image: opensearchproject/opensearch-dashboards:${OPENSEARCH_DASHBOARDS_IMAGE_VERSION}
    ports:
      - "5601:5601"
    expose:
      - '5601'
    environment:
      - 'OPENSEARCH_HOSTS=["http://opensearch:9200"]'
      - "DISABLE_SECURITY_DASHBOARDS_PLUGIN=true"
    depends_on:
      - opensearch

  redis:
    hostname: redis
    image: redis:${REDIS_IMAGE_VERSION}
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data

  mailhog:
    hostname: mailhog
    build: ./build/mailhog
    volumes:
      - mailhog-data:/home/mailhog
      - ./config/mailhog/outgoing-smtp.json:/outgoing-smtp.json
    ports:
      - "1025:1025"
      - "8025:8025"
    environment:
      MH_STORAGE: maildir
      MH_MAILDIR_PATH: /home/mailhog
      MH_OUTGOING_SMTP: /outgoing-smtp.json

  rabbitmq:
    hostname: rabbitmq
    image: rabbitmq:${RABBITMQ_IMAGE_VERSION}
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq

volumes:
  elasticsearch-data:
  opensearch-data:
  redis-data:
  mailhog-data:
  rabbitmq-data:

#networks:
#  multiple:
#    driver: bridge
