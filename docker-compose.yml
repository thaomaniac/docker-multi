name: multi

services:
  nginx:
    hostname: nginx
    image: nginx:${NGINX_IMAGE_VERSION}
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./config/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./config/nginx/conf.d:/etc/nginx/conf.d:ro
      - ./config/nginx/m2conf:/etc/nginx/m2conf:ro
      - ./config/nginx/ssl:/etc/ssl:ro
      - ./www:/var/www:cached
      - ./var/log/nginx:/var/log/nginx

  php74:
    build:
      context: ./build/php
      dockerfile: php74.Dockerfile
    ports:
      - 9000
    volumes:
      - ./config/php/php74/custom.ini:/usr/local/etc/php/conf.d/php-custom.ini:ro
      - ./www:/var/www:cached
    working_dir: /var/www
    user: 'www-data'

  php81:
    build:
      context: ./build/php
      dockerfile: php81.Dockerfile
    ports:
      - 9000
    volumes:
      - ./config/php/php81/custom.ini:/usr/local/etc/php/conf.d/php-custom.ini:ro
      - ./www:/var/www:cached
    working_dir: /var/www
    user: 'www-data'

  php82:
    build:
      context: ./build/php
      dockerfile: php82.Dockerfile
    ports:
      - 9000
    volumes:
      - ./config/php/php82/custom.ini:/usr/local/etc/php/conf.d/php-custom.ini:ro
      - ./www:/var/www:cached
    working_dir: /var/www
    user: 'www-data'

  mysql:
    image: mysql:${MYSQL_IMAGE_VERSION}
    ports:
      - 3306:3306
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - ./var/data/mysql:/var/lib/mysql:cached

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    ports:
      - 8080:80
    environment:
      PMA_HOST: mysql
      PMA_PMADB: phpmyadmin
    volumes:
      - ./config/phpmyadmin/conf.d:/etc/phpmyadmin/conf.d
    depends_on:
      - mysql

  elasticsearch:
    image: elasticsearch:${ELASTICSEARCH_IMAGE_VERSION}
    ports:
      - 9200:9200
    environment:
      - discovery.type=single-node
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    deploy:
      resources:
        limits:
          memory: 2g
          cpus: '0.5'
        reservations:
          memory: 200m
          cpus: '0.25'

  redis:
    image: redis:${REDIS_IMAGE_VERSION}
    restart: always
    ports:
      - 6379:6379
    volumes:
      - redis-data:/data

  mailhog:
    build: ./build/mailhog
    volumes:
      - mailhog-data:/home/mailhog
    ports:
      - 8025:8025
      - 1025:1025
    environment:
      MH_STORAGE: maildir
      MH_MAILDIR_PATH: /home/mailhog

volumes:
  mailhog-data:
  redis-data:
  elasticsearch-data:

#networks:
#  multiple:
#    driver: bridge
