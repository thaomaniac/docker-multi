name: multi

services:
  nginx:
    hostname: nginx
    image: nginx:${NGINX_IMAGE_VERSION}
    ports:
      - "${NGINX_SERVER_HTTP_PORT}:80"
      - "${NGINX_SERVER_HTTPS_PORT}:443"
    volumes:
      - ./config/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./config/nginx/conf.d:/etc/nginx/conf.d
      - ./config/nginx/m2conf.d:/etc/nginx/m2conf.d
      - ./config/nginx/ssl:/etc/ssl
      - ./www:/var/www:cached
      - ./var/log/nginx:/var/log/nginx

  php81:
    #build: ./config/php
    build:
      context: ./build/php/php81
      dockerfile: Dockerfile
    ports:
      - "9000"
    volumes:
      - ./config/php/php81/php-custom.ini:/usr/local/etc/php/conf.d/php-custom.ini:ro
      - ./www:/var/www:cached
    working_dir: /var/www
    user: 'www-data'

  php82:
    #build: ./config/php
    build:
      context: ./build/php/php82
      dockerfile: Dockerfile
    ports:
      - "9000"
    volumes:
      - ./config/php/php82/php-custom.ini:/usr/local/etc/php/conf.d/php-custom.ini:ro
      - ./www:/var/www:cached
    working_dir: /var/www
    user: 'www-data'

  mysql:
    image: mysql:${MYSQL_IMAGE_VERSION}
    hostname: mysql
    ports:
      - "${MYSQL_SERVER_PORT}:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - ./var/data/mysql:/var/lib/mysql:cached

  elasticsearch:
    image: elasticsearch:${ELASTICSEARCH_IMAGE_VERSION}
    hostname: elasticsearch
    ports:
      - "${ELASTICSEARCH_SERVER_PORT}:9200"
    environment:
      - discovery.type=single-node
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    deploy:
      resources:
        limits:
          memory: 2g
          cpus: '0.5'
        reservations:
          memory: 200m
          cpus: '0.25'

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    restart: always
    ports:
      - ${PHPMYADMIN_SERVER_PORT}:80
    environment:
      PMA_HOST: mysql
    depends_on:
      - mysql

#  redis:
#    image: redis:${REDIS_IMAGE_VERSION}
#    hostname: redis
#    ports:
#      - "${REDIS_SERVER_PORT}:6379"

  mailhog:
    hostname: mailhog
    image: mailhog/mailhog
    ports:
      - "${MAILHOG_SERVER_SMTP_PORT}:1025"
      - "${MAILHOG_SERVER_HTTP_PORT}:8025"

volumes:
  elasticsearch-data:

#networks:
#  magento:
#    driver: bridge